<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email_Action_1</name>
        <label>Send Email Action 1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddressesArray</name>
            <value>
                <elementReference>Transform_2</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>bccRecipientAddressList</name>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>DefaultWorkflowUser</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>User Deactivation Failed</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>SendingEmailtoAdmin</elementReference>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>64.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <decisions>
        <name>Check_If_Last_Working_Date_is_Today</name>
        <label>Check If Last Working Date is Today</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Last_Working_Date_is_Today</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Last_Working_Date__c</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>CheckingLastWorkingDate</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_User_From_Employee</targetReference>
            </connector>
            <label>Last Working Date is Today</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <formulas>
        <name>CheckingLastWorkingDate</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <interviewLabel>Deactivating inactive employee user {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Deactivating inactive employee user</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Permission_sets</name>
        <label>Get Permission sets</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Users_Id</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Timesheet_Email_Admin</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PermissionSet</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User_From_Employee</name>
        <label>Get User From Employee</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Deactivating_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Users_Email</name>
        <label>Get Users Email</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Transform_2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>In</operator>
            <value>
                <elementReference>Transform_1</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Users_Id</name>
        <label>Get Users Id</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Transform_1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PermissionSetId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Permission_sets.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>PermissionSetAssignment</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Deactivating_User</name>
        <label>Deactivating User</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <faultConnector>
            <targetReference>Get_Permission_sets</targetReference>
        </faultConnector>
        <inputAssignments>
            <field>IsActive</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputReference>$Record.User__r</inputReference>
    </recordUpdates>
    <start>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <object>Employee__c</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>Deactivating_users</name>
            <connector>
                <targetReference>Check_If_Last_Working_Date_is_Today</targetReference>
            </connector>
            <label>Deactivating users</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Draft</status>
    <textTemplates>
        <name>SendingEmailtoAdmin</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>Hi Admin,
The Flow failed to deactivate the following user:
User Name: {!Get_User_From_Employee.FirstName}
User Id: {!Get_User_From_Employee.Id}
This may have happened because the user is still referenced in:
- Active Email Alerts
- Queues
- Default Workflow User settings
- Or other dependencies
Please investigate manually and deactivate the user if needed.

Thank you,  
Salesforce Automation System</text>
    </textTemplates>
    <transforms>
        <name>Transform_1</name>
        <label>Transform 1</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Users_Email</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>Get_Users_Id[$EachItem].AssigneeId</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
    <transforms>
        <name>Transform_2</name>
        <label>Transform 2</label>
        <locationX>0</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Send_Email_Action_1</targetReference>
        </connector>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <scale>0</scale>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <transformValues>
            <transformValueActions>
                <transformType>Map</transformType>
                <value>
                    <elementReference>Get_Users_Email[$EachItem].Email</elementReference>
                </value>
            </transformValueActions>
        </transformValues>
    </transforms>
</Flow>
